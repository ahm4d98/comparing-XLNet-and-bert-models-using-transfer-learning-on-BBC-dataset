{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nfrom tensorflow.keras.utils import to_categorical\nimport os\nfrom tensorflow.keras.layers import Dense,Input\nfrom tensorflow.keras.losses import categorical_crossentropy\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras import *\nfrom transformers import *\nfrom tensorflow.keras.models import load_model\nfrom sklearn import metrics\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nimport tensorflow as tf\nfrom matplotlib import pyplot as plt\nfrom sklearn import metrics\nimport sklearn","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:14.034733Z","iopub.execute_input":"2022-04-20T04:28:14.035305Z","iopub.status.idle":"2022-04-20T04:28:14.046268Z","shell.execute_reply.started":"2022-04-20T04:28:14.035267Z","shell.execute_reply":"2022-04-20T04:28:14.045524Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":"# Pre-training XLnet model using emotions Dataset","metadata":{}},{"cell_type":"markdown","source":"### initializing XLnet model","metadata":{}},{"cell_type":"code","source":"def model():\n    \"\"\" Creates the model. It is composed of the XLNet main block and then\n    a classification head its added\n    \"\"\"\n    # Define token ids as inputs\n    word_inputs = tf.keras.Input(shape=(200,), name='input_ids', dtype='int32')\n    #print(word_inputs)\n    # Call XLNet model\n    doc_encoding = xlnet(word_inputs)[0]\n\n    # CLASSIFICATION HEAD \n    # Collect last step from last hidden state (CLS)\n    doc_encoding = tf.squeeze(doc_encoding[:, -1:, :], axis=1)\n\n    l = tf.keras.layers.Dense(5, activation='softmax', name=\"output\")(doc_encoding)\n    #a lower learning rate than used in bert \n    opt = tf.keras.optimizers.Adam(learning_rate=0.00001)\n    # Compile model\n    model = tf.keras.Model(inputs=[word_inputs], outputs=[l])\n    METRICS = [\n      tf.keras.metrics.CategoricalAccuracy('accuarcy')]\n    model.compile(optimizer=opt,loss='categorical_crossentropy', metrics=METRICS)\n\n    return model","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:14.049942Z","iopub.execute_input":"2022-04-20T04:28:14.051790Z","iopub.status.idle":"2022-04-20T04:28:14.060241Z","shell.execute_reply.started":"2022-04-20T04:28:14.051761Z","shell.execute_reply":"2022-04-20T04:28:14.059519Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"markdown","source":"### mapping each numerical index to it's class","metadata":{}},{"cell_type":"code","source":"def index_to_class(df):\n    index_dict={0:'business' ,  1:'tech',  2:'politics',  3:'sport', 4: 'entertainment'}\n    df=df.replace(index_dict)\n    return df","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:14.061772Z","iopub.execute_input":"2022-04-20T04:28:14.062272Z","iopub.status.idle":"2022-04-20T04:28:14.069634Z","shell.execute_reply.started":"2022-04-20T04:28:14.062236Z","shell.execute_reply":"2022-04-20T04:28:14.068882Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"markdown","source":"### downloading tokenizer and xlnet model","metadata":{}},{"cell_type":"code","source":"tokenizer=XLNetTokenizer.from_pretrained('xlnet-base-cased')\nxlnet=TFXLNetModel.from_pretrained('xlnet-base-cased')","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:14.072109Z","iopub.execute_input":"2022-04-20T04:28:14.072991Z","iopub.status.idle":"2022-04-20T04:28:19.104518Z","shell.execute_reply.started":"2022-04-20T04:28:14.072952Z","shell.execute_reply":"2022-04-20T04:28:19.103645Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"markdown","source":"### loading preprocessed emotions dataset","metadata":{}},{"cell_type":"code","source":"df_train = pd.read_csv(r'../input/emotions-1111dataset/train.csv')\ndf_test = pd.read_csv(r'../input/emotions-1111dataset/test.csv')\ndf_val = pd.read_csv(r'../input/emotions-1111dataset/validate.csv')","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:19.106356Z","iopub.execute_input":"2022-04-20T04:28:19.106596Z","iopub.status.idle":"2022-04-20T04:28:19.129741Z","shell.execute_reply.started":"2022-04-20T04:28:19.106559Z","shell.execute_reply":"2022-04-20T04:28:19.129001Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"df_train","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:19.131192Z","iopub.execute_input":"2022-04-20T04:28:19.131464Z","iopub.status.idle":"2022-04-20T04:28:19.145332Z","shell.execute_reply.started":"2022-04-20T04:28:19.131427Z","shell.execute_reply":"2022-04-20T04:28:19.144264Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"X_train=df_train['Text']\ny_train= to_categorical(df_train['Emotion'],num_classes=5)\nX_val=df_val['Text']\ny_val=to_categorical(df_val['Emotion'],num_classes=5)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:19.147935Z","iopub.execute_input":"2022-04-20T04:28:19.148232Z","iopub.status.idle":"2022-04-20T04:28:19.156566Z","shell.execute_reply.started":"2022-04-20T04:28:19.148193Z","shell.execute_reply":"2022-04-20T04:28:19.155671Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"markdown","source":"### initiallizing model ","metadata":{}},{"cell_type":"code","source":"model=model()","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:19.158652Z","iopub.execute_input":"2022-04-20T04:28:19.159466Z","iopub.status.idle":"2022-04-20T04:28:20.306575Z","shell.execute_reply.started":"2022-04-20T04:28:19.159425Z","shell.execute_reply":"2022-04-20T04:28:20.305862Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":"### tokenization of train and validation dataset","metadata":{}},{"cell_type":"code","source":"x_train=tokenizer(X_train.tolist(),add_special_tokens=True,max_length=200,truncation=True,pad_to_max_length=True,return_tensors='tf',return_token_type_ids=False,return_attention_mask=False)\nx_val=tokenizer(X_val.tolist(),add_special_tokens=True,max_length=200,truncation=True,pad_to_max_length=True,return_tensors='tf',return_token_type_ids=False,return_attention_mask=False)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:20.307996Z","iopub.execute_input":"2022-04-20T04:28:20.308240Z","iopub.status.idle":"2022-04-20T04:28:21.296185Z","shell.execute_reply.started":"2022-04-20T04:28:20.308207Z","shell.execute_reply":"2022-04-20T04:28:21.295452Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"code","source":"x_test=tokenizer(df_test['Text'].tolist(),add_special_tokens=True,max_length=200,truncation=True,pad_to_max_length=True,return_tensors='tf',return_token_type_ids=False,return_attention_mask=False)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:21.297727Z","iopub.execute_input":"2022-04-20T04:28:21.298198Z","iopub.status.idle":"2022-04-20T04:28:21.567955Z","shell.execute_reply.started":"2022-04-20T04:28:21.298160Z","shell.execute_reply":"2022-04-20T04:28:21.567190Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"hist=model.fit(x={'input_ids':x_train['input_ids']}, y=y_train , epochs=5,validation_data =({'input_ids':x_val['input_ids']},y_val))","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:28:21.569430Z","iopub.execute_input":"2022-04-20T04:28:21.570155Z","iopub.status.idle":"2022-04-20T04:35:56.314732Z","shell.execute_reply.started":"2022-04-20T04:28:21.570117Z","shell.execute_reply":"2022-04-20T04:35:56.314035Z"},"trusted":true},"execution_count":46,"outputs":[]},{"cell_type":"code","source":"y_pred = model.predict(x={'input_ids':x_test['input_ids']})","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:35:56.316590Z","iopub.execute_input":"2022-04-20T04:35:56.316874Z","iopub.status.idle":"2022-04-20T04:36:10.910759Z","shell.execute_reply.started":"2022-04-20T04:35:56.316835Z","shell.execute_reply":"2022-04-20T04:36:10.909998Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"markdown","source":"### NP.argmax returns the index of the maximum value in y_pred array","metadata":{}},{"cell_type":"code","source":"print(classification_report(df_test['Emotion'],np.argmax(y_pred,axis=1)))","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:10.914079Z","iopub.execute_input":"2022-04-20T04:36:10.914334Z","iopub.status.idle":"2022-04-20T04:36:10.927554Z","shell.execute_reply.started":"2022-04-20T04:36:10.914301Z","shell.execute_reply":"2022-04-20T04:36:10.926690Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"confusion_matrix(df_test['Emotion'], np.argmax(y_pred,axis=1))","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:10.929675Z","iopub.execute_input":"2022-04-20T04:36:10.930397Z","iopub.status.idle":"2022-04-20T04:36:10.939217Z","shell.execute_reply.started":"2022-04-20T04:36:10.930358Z","shell.execute_reply":"2022-04-20T04:36:10.938368Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"markdown","source":"# plotting pretraining loss and accuarcy","metadata":{}},{"cell_type":"code","source":"loss = hist.history['loss']\nval_loss = hist.history['val_loss']\nepochs = range(1, len(loss) + 1)\nplt.plot(epochs, loss, 'y', label='Training loss')\nplt.plot(epochs, val_loss, 'r', label='Validation loss')\nplt.title('Training and validation loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend()\nplt.show()\nplt.savefig(\"XLnet-pretraining-loss.png\",dpi=1500)\n\n\nacc = hist.history['accuarcy']\nval_acc = hist.history['accuarcy']\nplt.plot(epochs, acc, 'y', label='Training acc')\nplt.plot(epochs, val_acc, 'r', label='Validation acc')\nplt.title('Training and validation accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()\nplt.savefig(\"XLnet-pretraining-balanced_accuarcy.png\",dpi=1500)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:10.940554Z","iopub.execute_input":"2022-04-20T04:36:10.940890Z","iopub.status.idle":"2022-04-20T04:36:15.859397Z","shell.execute_reply.started":"2022-04-20T04:36:10.940854Z","shell.execute_reply":"2022-04-20T04:36:15.858719Z"},"trusted":true},"execution_count":50,"outputs":[]},{"cell_type":"markdown","source":"### saving the model","metadata":{}},{"cell_type":"code","source":"model.save('pre-trained xlnet.h5')","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:15.860671Z","iopub.execute_input":"2022-04-20T04:36:15.860902Z","iopub.status.idle":"2022-04-20T04:36:19.048024Z","shell.execute_reply.started":"2022-04-20T04:36:15.860873Z","shell.execute_reply":"2022-04-20T04:36:19.047090Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"code","source":"df_prod = pd.read_csv(r'../input/bbc-dataset1111/test1.csv')\ndf_train = pd.read_csv(r'../input/bbc-dataset1111/train1.csv')\ndf_val = pd.read_csv(r'../input/bbc-dataset1111/validate1.csv')","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:19.053681Z","iopub.execute_input":"2022-04-20T04:36:19.055766Z","iopub.status.idle":"2022-04-20T04:36:19.111591Z","shell.execute_reply.started":"2022-04-20T04:36:19.055728Z","shell.execute_reply":"2022-04-20T04:36:19.110939Z"},"trusted":true},"execution_count":52,"outputs":[]},{"cell_type":"code","source":"x_train=df_train['Text']\ny_train= to_categorical(df_train['Category'],num_classes=5)\nx_test=df_val['Text'][300:]\nx_val=df_val['Text'][:300]\ny_test=df_val['Category'][300:]\ny_val=to_categorical(df_val['Category'][:300],num_classes=5)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:19.112946Z","iopub.execute_input":"2022-04-20T04:36:19.113205Z","iopub.status.idle":"2022-04-20T04:36:20.024659Z","shell.execute_reply.started":"2022-04-20T04:36:19.113161Z","shell.execute_reply":"2022-04-20T04:36:20.023766Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"df_val","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:20.025767Z","iopub.execute_input":"2022-04-20T04:36:20.026779Z","iopub.status.idle":"2022-04-20T04:36:21.061404Z","shell.execute_reply.started":"2022-04-20T04:36:20.026747Z","shell.execute_reply":"2022-04-20T04:36:21.060722Z"},"trusted":true},"execution_count":54,"outputs":[]},{"cell_type":"code","source":"x_prod=df_prod['Text']","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:21.062641Z","iopub.execute_input":"2022-04-20T04:36:21.063268Z","iopub.status.idle":"2022-04-20T04:36:21.574125Z","shell.execute_reply.started":"2022-04-20T04:36:21.063229Z","shell.execute_reply":"2022-04-20T04:36:21.573111Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"x_train=tokenizer(x_train.to_list(),add_special_tokens=True,max_length=200,truncation=True,pad_to_max_length=True,return_tensors='tf',return_token_type_ids=False,return_attention_mask=False)\nx_val=tokenizer(x_val.to_list(),add_special_tokens=True,max_length=200,truncation=True,pad_to_max_length=True,return_tensors='tf',return_token_type_ids=False,return_attention_mask=False)\nX_test=tokenizer(x_test.to_list(),add_special_tokens=True,max_length=200,truncation=True,pad_to_max_length=True,return_tensors='tf',return_token_type_ids=False,return_attention_mask=False)\nx_prod=tokenizer(x_prod.to_list(),add_special_tokens=True,max_length=200,truncation=True,pad_to_max_length=True,return_tensors='tf',return_token_type_ids=False,return_attention_mask=False)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:21.575419Z","iopub.execute_input":"2022-04-20T04:36:21.576218Z","iopub.status.idle":"2022-04-20T04:36:29.739534Z","shell.execute_reply.started":"2022-04-20T04:36:21.576174Z","shell.execute_reply":"2022-04-20T04:36:29.738752Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"markdown","source":"### loading pretrained XLnet model custom_objects is because the load model method doesn't know what XLnet object is","metadata":{}},{"cell_type":"code","source":"#savedModel=load_model('pre-trained xlnet.h5', custom_objects={'TFXLNetModel': xlnet})","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:29.740807Z","iopub.execute_input":"2022-04-20T04:36:29.741089Z","iopub.status.idle":"2022-04-20T04:36:29.746301Z","shell.execute_reply.started":"2022-04-20T04:36:29.741053Z","shell.execute_reply":"2022-04-20T04:36:29.744998Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"markdown","source":"### training the dataset","metadata":{}},{"cell_type":"code","source":"history=model.fit(x={'input_ids':x_train['input_ids']}, y=y_train , epochs=5,validation_data =({'input_ids':x_val['input_ids']},y_val))","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:36:29.747596Z","iopub.execute_input":"2022-04-20T04:36:29.748062Z","iopub.status.idle":"2022-04-20T04:39:51.704955Z","shell.execute_reply.started":"2022-04-20T04:36:29.748025Z","shell.execute_reply":"2022-04-20T04:39:51.704186Z"},"trusted":true},"execution_count":58,"outputs":[]},{"cell_type":"markdown","source":"### plotting loss and accuarcy","metadata":{}},{"cell_type":"code","source":"loss = history.history['loss']\nval_loss = history.history['val_loss']\nepochs = range(1, len(loss) + 1)\nplt.plot(epochs, loss, 'y', label='Training loss')\nplt.plot(epochs, val_loss, 'r', label='Validation loss')\nplt.title('Training and validation loss')\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.legend()\nplt.show()\n\n\nacc = history.history['accuarcy']\nval_acc = history.history['accuarcy']\nplt.plot(epochs, acc, 'y', label='Training acc')\nplt.plot(epochs, val_acc, 'r', label='Validation acc')\nplt.title('Training and validation accuracy')\nplt.xlabel('Epochs')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:51.706719Z","iopub.execute_input":"2022-04-20T04:39:51.706993Z","iopub.status.idle":"2022-04-20T04:39:52.100122Z","shell.execute_reply.started":"2022-04-20T04:39:51.706958Z","shell.execute_reply":"2022-04-20T04:39:52.099481Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"markdown","source":"### using pretrained model","metadata":{}},{"cell_type":"code","source":"y_pred=model.predict(x={'input_ids':X_test['input_ids']})","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:52.101447Z","iopub.execute_input":"2022-04-20T04:39:52.101690Z","iopub.status.idle":"2022-04-20T04:39:55.235158Z","shell.execute_reply.started":"2022-04-20T04:39:52.101655Z","shell.execute_reply":"2022-04-20T04:39:55.234312Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test,np.argmax(y_pred,axis=1)))","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:55.237727Z","iopub.execute_input":"2022-04-20T04:39:55.238338Z","iopub.status.idle":"2022-04-20T04:39:55.249669Z","shell.execute_reply.started":"2022-04-20T04:39:55.238299Z","shell.execute_reply":"2022-04-20T04:39:55.248676Z"},"trusted":true},"execution_count":61,"outputs":[]},{"cell_type":"code","source":"confusion_matrix(y_test, np.argmax(y_pred,axis=1))","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:55.251016Z","iopub.execute_input":"2022-04-20T04:39:55.251560Z","iopub.status.idle":"2022-04-20T04:39:55.260715Z","shell.execute_reply.started":"2022-04-20T04:39:55.251522Z","shell.execute_reply":"2022-04-20T04:39:55.260018Z"},"trusted":true},"execution_count":62,"outputs":[]},{"cell_type":"markdown","source":"### getting the highest predicted class for each row","metadata":{}},{"cell_type":"code","source":"y_pred=np.argmax(y_pred,axis=1)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:55.262025Z","iopub.execute_input":"2022-04-20T04:39:55.262340Z","iopub.status.idle":"2022-04-20T04:39:55.266793Z","shell.execute_reply.started":"2022-04-20T04:39:55.262305Z","shell.execute_reply":"2022-04-20T04:39:55.266000Z"},"trusted":true},"execution_count":63,"outputs":[]},{"cell_type":"code","source":"test_accuarcy=sklearn.metrics.balanced_accuracy_score(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:55.268113Z","iopub.execute_input":"2022-04-20T04:39:55.268620Z","iopub.status.idle":"2022-04-20T04:39:55.277097Z","shell.execute_reply.started":"2022-04-20T04:39:55.268585Z","shell.execute_reply":"2022-04-20T04:39:55.276335Z"},"trusted":true},"execution_count":64,"outputs":[]},{"cell_type":"code","source":"test_accuarcy","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:55.278343Z","iopub.execute_input":"2022-04-20T04:39:55.279019Z","iopub.status.idle":"2022-04-20T04:39:55.286477Z","shell.execute_reply.started":"2022-04-20T04:39:55.278978Z","shell.execute_reply":"2022-04-20T04:39:55.285612Z"},"trusted":true},"execution_count":65,"outputs":[]},{"cell_type":"code","source":"y_pred=model.predict(x={'input_ids':x_prod['input_ids']})","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:39:55.290774Z","iopub.execute_input":"2022-04-20T04:39:55.291220Z","iopub.status.idle":"2022-04-20T04:40:05.555506Z","shell.execute_reply.started":"2022-04-20T04:39:55.291191Z","shell.execute_reply":"2022-04-20T04:40:05.554618Z"},"trusted":true},"execution_count":66,"outputs":[]},{"cell_type":"code","source":"y_pred=np.argmax(y_pred,axis=1)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:40:05.558091Z","iopub.execute_input":"2022-04-20T04:40:05.558531Z","iopub.status.idle":"2022-04-20T04:40:05.562550Z","shell.execute_reply.started":"2022-04-20T04:40:05.558490Z","shell.execute_reply":"2022-04-20T04:40:05.561721Z"},"trusted":true},"execution_count":67,"outputs":[]},{"cell_type":"code","source":"y_pred=pd.DataFrame(y_pred,columns=['Target'])","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:40:05.563773Z","iopub.execute_input":"2022-04-20T04:40:05.564262Z","iopub.status.idle":"2022-04-20T04:40:05.574245Z","shell.execute_reply.started":"2022-04-20T04:40:05.564223Z","shell.execute_reply":"2022-04-20T04:40:05.573493Z"},"trusted":true},"execution_count":68,"outputs":[]},{"cell_type":"code","source":"y_pred=index_to_class(y_pred)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:40:05.575619Z","iopub.execute_input":"2022-04-20T04:40:05.576074Z","iopub.status.idle":"2022-04-20T04:40:05.585211Z","shell.execute_reply.started":"2022-04-20T04:40:05.576037Z","shell.execute_reply":"2022-04-20T04:40:05.584490Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"test=pd.merge(pd.DataFrame(x_test),y_pred,right_index=True,left_index=True)","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:40:05.587457Z","iopub.execute_input":"2022-04-20T04:40:05.588884Z","iopub.status.idle":"2022-04-20T04:40:05.596932Z","shell.execute_reply.started":"2022-04-20T04:40:05.588843Z","shell.execute_reply":"2022-04-20T04:40:05.596118Z"},"trusted":true},"execution_count":70,"outputs":[]},{"cell_type":"code","source":"test","metadata":{"execution":{"iopub.status.busy":"2022-04-20T04:54:35.999225Z","iopub.execute_input":"2022-04-20T04:54:35.999520Z","iopub.status.idle":"2022-04-20T04:54:36.012856Z","shell.execute_reply.started":"2022-04-20T04:54:35.999489Z","shell.execute_reply":"2022-04-20T04:54:36.012081Z"},"trusted":true},"execution_count":71,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}